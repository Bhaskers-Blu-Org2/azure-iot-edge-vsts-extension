{
  "id": "80F3F6A0-82A6-4A22-BA7A-E5B8C541B9B8",
  "name": "AzureIoTEdge",
  "friendlyName": "Azure IoT Edge",
  "description": "Azure IoT Edge",
  "helpMarkDown": "",
  "category": "Build",
  "visibility": [
    "Build",
    "Release"
  ],
  "author": "Microsoft",
  "version": {
    "Major": 1,
    "Minor": 1,
    "Patch": 2
  },
  "instanceNameFormat": "Azure IoT Edge - $(action)",
  "groups": [
    {
      "name": "advanced",
      "displayName": "Advanced",
      "isExpanded": false
    }
  ],
  "inputs": [
    {
      "name": "action",
      "type": "pickList",
      "label": "Action",
      "defaultValue": "Build and Push modules",
      "required": true,
      "options": {
        "Build modules": "Build modules",
        "Build and Push modules": "Build and Push modules",
        "Deploy to IoT Edge devices": "Deploy to IoT Edge devices"
      },
      "helpMarkDown": "Select an Edge action."
    },
    {
      "name": "deploymentFilePath",
      "type": "filePath",
      "label": "Path of deployment file",
      "defaultValue": "$(System.DefaultWorkingDirectory)/**/*.json",
      "required": true,
      "visibleRule": "action == Deploy to IoT Edge devices",
      "helpMarkDown": "Select the deployment json file. If this task is in release pipeline, you can keep the default value. If this task is in build pipeline, you need to set it to the path of generated deployment file path."
    },
    {
      "name": "connectedServiceNameARM",
      "aliases": [
        "azureSubscription"
      ],
      "type": "connectedService:AzureRM",
      "label": "Azure subscription contains IoT Hub",
      "required": true,
      "visibleRule": "action == Deploy to IoT Edge devices",
      "helpMarkDown": "Select an Azure subscription that contains IoT Hub"
    },
    {
      "name": "iothubname",
      "type": "pickList",
      "label": "IoT Hub name",
      "required": true,
      "visibleRule": "action == Deploy to IoT Edge devices",
      "helpMarkDown": "Select the IoT Hub Name"
    },
    {
      "name": "deploymentid",
      "type": "string",
      "label": "IoT Edge Deployment ID",
      "required": true,
      "defaultValue": "vsts-deployment",
      "visibleRule": "action == Deploy to IoT Edge devices",
      "helpMarkDown": "Input the IoT Edge Deployment ID, if ID exists, it will be overridden. For more information: https://docs.microsoft.com/azure/iot-edge/how-to-deploy-monitor#monitor-a-deployment"
    },
    {
      "name": "priority",
      "type": "string",
      "label": "IoT Edge Deployment priority",
      "required": true,
      "defaultValue": "0",
      "visibleRule": "action == Deploy to IoT Edge devices",
      "helpMarkDown": "Set the priority to a positive integer to resolve deployment conflicts: when targeted by multiple deployments a device will use the one with highest priority or (in case of two deployments with the same priority) latest creation time. For more information: https://docs.microsoft.com/azure/iot-edge/how-to-deploy-monitor#monitor-a-deployment"
    },
    {
      "name": "deviceOption",
      "type": "pickList",
      "label": "Choose single/multiple device",
      "required": true,
      "options": {
        "Single Device": "Single Device",
        "Multiple Devices": "Multiple Devices"
      },
      "helpMarkDown": "Choose to deploy to single or multiple(by tags) devices",
      "visibleRule": "action == Deploy to IoT Edge devices"
    },
    {
      "name": "deviceId",
      "type": "string",
      "label": "IoT Edge device ID",
      "required": true,
      "visibleRule": "deviceOption == Single Device",
      "helpMarkDown": "Input the IoT Edge device ID"
    },
    {
      "name": "targetcondition",
      "type": "string",
      "label": "IoT Edge device Target Condition",
      "required": true,
      "visibleRule": "deviceOption == Multiple Devices",
      "helpMarkDown": "Input the target condition of devices you would like to deploy. Do not use double quote. Example: tags.building=9 and tags.environment='test'. For more information: https://docs.microsoft.com/azure/iot-edge/how-to-deploy-monitor#monitor-a-deployment"
    },
    {
      "name": "templateFilePath",
      "type": "filePath",
      "label": "Path of template file",
      "defaultValue": "deployment.template.json",
      "visibleRule": "action = Build modules || action = Build and Push modules",
      "required": true,
      "helpMarkDown": "The path of Edge solution template file."
    },
    {
      "name": "defaultPlatform",
      "type": "pickList",
      "label": "Default Platform",
      "defaultValue": "amd64",
      "required": true,
      "visibleRule": "action = Build modules || action = Build and Push modules",
      "options": {
        "amd64": "amd64",
        "windows-amd64": "windows-amd64",
        "arm32v7": "arm32v7"
      },
      "properties": {
        "EditableOptions": "True"
      },
      "helpMarkDown": "In your solution template, you can leave the modules platform unspecified. For these modules, the default platform will be used."
    },
    {
      "name": "bypassModules",
      "type": "string",
      "label": "Bypass Modules",
      "defaultValue": "",
      "visibleRule": "action = Build modules || action = Build and Push modules",
      "helpMarkDown": "Select the modules that you **DO NOT** need to build(or push) in the template file, specify module names and separate with comma. Example: SampleModule1,SampleModule2. Leave empty if you would like to build all the modules in template file."
    },
    {
      "name": "containerregistrytype",
      "type": "pickList",
      "label": "Container Registry Type",
      "defaultValue": "Azure Container Registry",
      "required": true,
      "visibleRule": "action = Build and Push modules",
      "options": {
        "Azure Container Registry": "Azure Container Registry",
        "Container Registry": "Container Registry"
      },
      "helpMarkDown": "Select a Container Registry Type."
    },
    {
      "name": "dockerRegistryEndpoint",
      "aliases": [
        "dockerRegistryConnection"
      ],
      "type": "connectedService:dockerregistry",
      "required": true,
      "label": "Docker Registry Connection",
      "helpMarkDown": "Select a Docker registry connection. Required for commands that need to authenticate with a registry.",
      "visibleRule": "containerregistrytype = Container Registry"
    },
    {
      "name": "outputPath",
      "type": "filePath",
      "label": "Path of output deployment file",
      "defaultValue": "$(Build.ArtifactStagingDirectory)/deployment.json",
      "visibleRule": "action = Build modules || action = Build and Push modules",
      "required": true,
      "helpMarkDown": "The file path of output deployment json file, it will need in deploy task. If it is a relative path, it will be resolved relative to template file."
    },
    {
      "name": "azureSubscriptionEndpoint",
      "type": "connectedService:AzureRM",
      "label": "Azure subscription",
      "helpMarkDown": "Select an Azure subscription",
      "visibleRule": "containerregistrytype = Azure Container Registry"
    },
    {
      "name": "azureContainerRegistry",
      "label": "Azure Container Registry",
      "type": "pickList",
      "required": true,
      "helpMarkDown": "Select an Azure Container Registry",
      "visibleRule": "containerregistrytype = Azure Container Registry",
      "defaultValue": ""
    }
  ],
  "dataSourceBindings": [
    {
      "target": "azureContainerRegistry",
      "endpointId": "$(azureSubscriptionEndpoint)",
      "dataSourceName": "AzureRMContainerRegistries",
      "resultTemplate": "{\"Value\":\"{\\\"loginServer\\\":\\\"{{{properties.loginServer}}}\\\", \\\"id\\\" : \\\"{{{id}}}\\\"}\",\"DisplayValue\":\"{{{name}}}\"}"
    },
    {
      "target": "iothubname",
      "endpointId": "$(connectedServiceNameARM)",
      "endpointUrl": "{{{endpoint.url}}}/subscriptions/{{{endpoint.subscriptionId}}}/providers/Microsoft.Devices/IotHubs?api-version=2018-04-01",
      "resultSelector": "jsonpath:$.value[*].name"
    }
  ],
  "execution": {
    "Node": {
      "target": "index.js"
    }
  },
  "messages": {
    "ContainerPatternFound": "Pattern found in docker filepath parameter",
    "ContainerPatternNotFound": "No pattern found in docker filepath parameter",
    "ContainerDockerFileNotFound": "No Docker file matching  %s  was found.",
    "NoImagesInImageNamesFile": "At least one image name is expected in file '%s'.",
    "CantWriteDataToFile": "Can not write data to the file %s. Error: %s",
    "NoDataWrittenOnFile": "No data was written into the file %s",
    "FileContentSynced": "Synced the file content to the disk. The content is %s."
  }
}